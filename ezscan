#!/bin/bash
#
# ezscan script
# v. 0.0.3
#
# return information about an ezpublish installation
# 
# NOTE: this script needs php_ezscan in user PATH
#       (e.g. /usr/local/bin/php_ezscan)
#
#* Return values:
# 0: OK
# 1: error
#
###################################################################
# 
#
# v.0.4
#
# rivedo opzioni
#
# v.0.3
# aggiunto getops -l (long format)
# aggiunto + options
#
# v.0.2
# introdotto script bash
#
##################################################################
#
#
PHP=`which php`
if [ $? != 0 ] ; then
  echo "php is missing"
  echo "Terminating..." >&2
  exit 1
fi
# needed for cron execution
PATH=$PATH:/usr/local/bin/

PHP_EZSCAN=`which php_ezscan`
if [ $? != 0 ] ; then
  echo "php_ezscan is missing"
  echo "Terminating..." >&2
  exit 1
fi
EZSCAN=`which ezscan`
if [ $? != 0 ] ; then
  echo "ezscan is missing in PATH"
  echo "Terminating..." >&2
  exit 1
fi


NGINX_SITE_ENABLED_DIR=/etc/nginx/sites-enabled
APACHE_SITE_ENABLED_DIR=/etc/apache2/sites-enabled

#
all_parameters="$*"
#
# getops see /usr/share/doc/util-linux/examples/getopt-parse.bash
this_script=`basename $0`
TEMP=`getopt -o dhDB:V:as:Swzqnvx:: --long debug,help,ezpublish-directory,ini-block-name:,ini-var-name:,all,siteaccess:,list-siteaccess,web-virtual-host,ez-version,quiet,web-virtual-host-name,verbose,x-long:: \
     -n "$this_script" -- "$@"`

if [ $? != 0 ] ; then 
  echo "try 'ezscan --help' for datailed options"
  echo "Terminating..." >&2 
  exit 1 
fi
# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"
while true ; do
    case "$1" in
        -d|--debug) echo "Found the -d (--debug) option"
				DEBUG=1 
				shift ;;
        -h|--help) 
				if [ $DEBUG ]
				       then
				         echo "Found the -h (help) option"
				fi
                echo
				echo "Usage: ezscan [OPTIONS]... [DIRECTORY] [DIRECTORY] ..."
                echo "eZ Publish utility to extract basic settings info from command line"
                echo
                echo "If DIRECTORY is not specified, current directory is used"     
                echo
                echo "General options:"
                echo "-h,--help                       display this help and exit"
                echo "-s,--siteaccess SITEACCESS      selected siteaccess for operations"
                echo "-S,--list-siteaccess            list all available siteaccess"
                echo "-v,--verbose...                 display more information"
		echo "-B,--ini-block-name BLOCK-NAME  selected BLOCK-NAME in site.ini settings,"
                echo "                                  (to be used along with -V)"
                echo "-V,--ini-var-name VAR-NAME      display content of VAR-NAME in site.ini settings,"
                echo "                                  (to be used along with -B)"
               	echo "-a,--all                        display all info"
                echo "-D,--ezpublish-directory        display eZ Publish directory (documentroot)"
                echo "-w,--web-virtual-host           display virtualhost filename"
                echo "-n,--web-virtual-host-name      display web ServerName as defined in virtualhost"
                echo "-z,--ez-version                 display eZ Publish version"
                echo "-q,--quit                       quite mode (skip error message in case DIRECTORY is not eZ Publish directory)"
                echo "-d,--debug                      enable script debug"
                echo 
		echo "Examples:"
                echo "ezscan"
                echo "ezscan -aS"
		echo "ezscan -vS -B DatabaseSettings -V Database"
                echo "ezscan -as eng"
                echo "ezscan -s eng -B DatabaseSettings -V Server"
		echo "ezscan -w"
                echo "echo /home/httpd/*/html | xargs ezscan -vqz" 
                echo
		exit;;
        -D|--ezpublish-directory) 
            EZPUBLISH_DIRECTORY=1
            if [ $DEBUG ]; then 
              echo "Found the -D (--ezpublish-directory) option"
            fi 
            shift ;;
        -B|--ini-block-name)
            EZINI_BLOCK_NAME="$2"
            if [ $DEBUG ]; then
              echo "Found the -B (--ini-block-name) option, with value: $2"
            fi
            shift 2 ;;
        -V|--ini-var-name)
            EZINI_VAR_NAME="$2"
            if [ $DEBUG ]; then
              echo "Found the -V (--ini-var-name) option, with value: $2"
            fi
            shift 2 ;;
        -a|--all)
            ALL=1
            if [ $DEBUG ]; then
              echo "Found the -a (--all) option"
            fi
            shift ;;
        -s|--siteaccess)
            SITEACCESS="$2"
            if [ $DEBUG ]; then
              echo "Found the -s (--siteaccess) option, with value: $2"
            fi
            shift 2 ;;
        -S|--list-siteaccess)
            SITEACCESS_LIST=1
            if [ $DEBUG ]; then
              echo "Found the -S (--list-siteaccess) option"
            fi
            shift ;;
        -w|--web-virtual-host)
            WEB_VIRTUAL_HOST=1
            if [ $DEBUG ]; then
              echo "Found the -w (--web-virtual-host) option"
            fi
            shift ;;
        -z|--ez-version)
            EZ_VERSION=1
            if [ $DEBUG ]; then
              echo "Found the -z (--ez-version) option"
            fi
            shift ;;
        -q|--quiet)
            QUIET=1
            if [ $DEBUG ]; then
              echo "Found the -q (--quiet) option"
            fi
            shift ;;
        -n|--web-virtual-host-name)
            WEB_VIRTUAL_HOST_NAME=1
            if [ $DEBUG ]; then
              echo "Found the -n (--web-virtual-host-name) option"
            fi
            shift ;;
        -v|--verbose)
            VERBOSE=1
            if [ $DEBUG ]; then
              echo "Found the -v (--verbose) option"
            fi
            shift ;;

        -x|--x-long)
            # x has an optional argument. As we are in quoted mode,
            # an empty parameter will be generated if its optional
            # argument is not found.
            case "$2" in
                "") echo "Option z, no argument"; shift 2 ;;
                *)  echo "Option z, argument \`$2'" ; shift 2 ;;
            esac ;;

        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

if [ $DEBUG ]; then 
  echo "Script name $0"
  echo "  $*"
fi

if [ $DEBUG ] ; then
	echo "Remaining arguments:"
	for arg do echo '--> '"\`$arg'" ; done
fi

# counting arguments
count=0
arguments=""
for arg do
  arguments="$arguments $arg"
  count=$[ $count + 1 ]    
done

# if no argument set argument to current dir
if [ $count -eq 0 ] ; then
  EZ_DIR=`pwd`
  if [ $DEBUG ] ; then
    echo "No argument found: set EZ_DIR to current dir: $EZ_DIR"
  fi
fi

if [ $count -eq 1 ] ; then
  if [ $DEBUG ] ; then
    echo "One argument found: set EZ_DIR to current dir: $arguments"
  fi
  EZ_DIR=$arguments
  # test if directory exists
  if ! [ -d $EZ_DIR ] ; then
    ! [ $QUIET ] && echo "cannot access '$EZ_DIR': No such directory"
    EXIT_FOR_ERROR=yes
  fi
fi

if [ $count -ge 2 ] ; then
  # es. 
  # ezscan -vD dir1 dird
  #   all_options="-vD"
  #   all_parameters="-vD dir1 dird"
  #   arguments="dir1 dird"
  #
  # extract only options by removing remaining arguments at the end of $all_parameters
  all_options=${all_parameters%"$arguments"}
  if [ $DEBUG ] ; then
    echo "all_options is $all_options*"
    echo "all_parameters is $all_parameters*"
    echo "arguments is $arguments*"
  fi
  for argument in $arguments; do
    [ $DEBUG ] && echo "Now executing: $EZSCAN $all_options $argument"
    $EZSCAN $all_options $argument
  done
  exit
fi


# Test presence of mandatory options

if ( [ "$EZINI_BLOCK_NAME" ] && [ -z "$EZINI_VAR_NAME" ] ) || ( [ -z "$EZINI_BLOCK_NAME" ] && [  "$EZINI_VAR_NAME" ] )
then
  echo "eZIni output needs both blockName & varName"
  EXIT_FOR_ERROR=yes
fi


if [ $EXIT_FOR_ERROR ]
then
  #echo "ERROR"
  ! [ $QUIET ] && echo "Try 'ezscan -h'"
  exit 1
fi

#
#
# set defaults

# set EZ_DIR to current dir if it's not set
if [ -z "$EZ_DIR" ]
then
    EZ_DIR=`pwd`
fi

#TODO
# attivimo temporaneamente ALL di default
#if [ -z "$ALL" ]
#then
#    ALL="1"
#fi


if [ $DEBUG ]
then
  echo "# Executing..."
fi


EZPCOMP_EZ_DIR=''
cd $EZ_DIR

# check if we are inside an eZ Publish directory
#    populate $EZPCOMP_IS_EZ_DIR, $EZPCOMP_EZ_DIR
#
    if [ -n "$EZPCOMP_IS_EZ_DIR" ]; then EZPCOMP_IS_EZ_DIR=0; fi
    # Exit directly if not in an ezpublish instance
    CWD=$(pwd)
    EZPCOMP_PWD=$CWD

    # Reset the previous working directory if it doesn't match the current one
    if [ -n "$EZPCOMP_PWD" ] || [ "$EZPCOMP_PWD" -ne "$CWD" ]; then
        #local cwd_array ifs_bak
        IFS_BAK=$IFS
        IFS="/"
    CWD_ARRAY=( $CWD )
        EZPCOMP_IS_EZ_DIR=0
    for(( index=${#CWD_ARRAY[*]} ; index > 0 ; index-- ))
        do
            testdir="${CWD_ARRAY[*]:0:$index}"
            #_ezp_p_debug "$index: $testdir/lib/version.php"
            if [ -f "$testdir/lib/version.php" ]; then
                #_ezp_p_debug "$testdir did match"
                EZPCOMP_EZ_DIR="$testdir"
                EZPCOMP_IS_EZ_DIR=1
                EZPCOMP_PWD=$CWD
                export EZPCOMP_EZ_DIR
                export EZPCOMP_IS_EZ_DIR
                break
            fi
        done
        IFS=$IFS_BAK
    fi

if [ $DEBUG ]
then
  echo '$EZPCOMP_EZ_DIR='$EZPCOMP_EZ_DIR
  echo '$EZPCOMP_IS_EZ_DIR='$EZPCOMP_IS_EZ_DIR
fi


# Not an eZ Dir
if [ -z "$EZPCOMP_IS_EZ_DIR" ] || [ "$EZPCOMP_IS_EZ_DIR" -eq 0 ]; then
  ! [ $QUIET ] && echo "You are not in a eZ Publish directory, or the documentroot you supplied is not an eZ Publish directory"
  exit 1
fi

if [ $EZPUBLISH_DIRECTORY ] ; then
  [ $VERBOSE ] && echo -n "eZ Publish directory is: "
  echo $EZPCOMP_EZ_DIR
  exit
fi

if [ $DEBUG ] ; then
  echo  "# Executing: "
  echo  "cd $EZPCOMP_EZ_DIR"
fi
cd $EZPCOMP_EZ_DIR

###################################################################################
##   We are now in a valid eZ directory
###################################################################################

#get siteaccess list
#siteaccess_list=`$PHP_EZSCAN _ini SiteAccessSettings AvailableSiteAccessList`
comando='ls -1 settings/siteaccess'
siteaccess_list=`$comando`
esito=$?
if [ "$esito" == "1" ] ; then
  echo "ERRORE: non stato possibile creare il comando: $comando" 1>&2
  echo "        Ouput comando di dump: $siteaccess_list" 1>&2 
  exit 1
fi

# check if SITEACCESS exists
if [ $SITEACCESS ] ; then
    SITEACCESS_EXISTS=0
    for siteaccess in $siteaccess_list ; do
      if [ $siteaccess = $SITEACCESS ] ; then
        SITEACCESS_EXISTS=1
      fi
    done
    if [ $SITEACCESS_EXISTS -eq 0 ] ; then
      #echo "ERROR"
      if ! [ $QUIET ] ; then 
        echo "Siteaccess: '$SITEACCESS' does not exists"
        echo "Possible siteaccess are:"
        echo $siteaccess_list
      fi
      exit 1
    fi
fi

# la seguente e' necessaria per ridurre siteaccess_list in caso di richiesta di singolo siteaccess
if [ $SITEACCESS ] ; then
  siteaccess_list=$SITEACCESS
fi
#


#################
##  We have now a valid $siteaccess_list (with ONE or many siteaccess)
#################

[ $DEBUG ] && echo "we have now a valid \$siteaccess_list=$siteaccess_list"

#/home/developer/scripts/ezscan_dev/ezscan-php.php $EZINI_BLOCK_NAME $EZINI_VAR_NAME
if  [ "$EZINI_BLOCK_NAME" ] && [ "$EZINI_VAR_NAME" ] ; then
  if [ $DEBUG ] ; then
    echo  "# Executing: "
    echo "$PHP_EZSCAN _ini $EZINI_BLOCK_NAME $EZINI_VAR_NAME" 
  fi
  if [ -z $SITEACCESS ] && [ -z $SITEACCESS_LIST ] ; then
    output=`$PHP_EZSCAN  _ini $EZINI_BLOCK_NAME $EZINI_VAR_NAME`
    if [ $VERBOSE ] ; then 
      echo "Settings for $EZPCOMP_EZ_DIR"
      echo " [$EZINI_BLOCK_NAME]"
      echo " $EZINI_VAR_NAME=$output"
    else
      echo $output
    fi
  else
    for siteaccess in $siteaccess_list ; do
      output=`$PHP_EZSCAN _ini_fetchFromFile $EZINI_BLOCK_NAME $EZINI_VAR_NAME  $siteaccess` 
      if [ $VERBOSE ] ; then 
        echo
        echo "For $EZPCOMP_EZ_DIR"
        echo "Siteaccess: $siteaccess" 
        echo "  [$EZINI_BLOCK_NAME]"
        echo "  $EZINI_VAR_NAME=$output"
      else
        echo $output
      fi
    done
  fi
  exit
fi



if  [ "$WEB_VIRTUAL_HOST" ] ; then
  if [ $DEBUG ] ; then
    echo  "# Searching virtualhost that contains: $EZPCOMP_EZ_DIR"
    echo  "# Executing: "
    echo  "grep ..."
  fi
  if   [ -d $NGINX_SITE_ENABLED_DIR ]  ; then
    virtualhost=`grep -l  "^[[:space:]]*root[[:space:]]*$EZPCOMP_EZ_DIR" $NGINX_SITE_ENABLED_DIR/*`
    result=$?
  elif [ -d $APACHE_SITE_ENABLED_DIR ] ; then
    virtualhost=`grep -l  "^[[:space:]]*DocumentRoot[[:space:]]*$EZPCOMP_EZ_DIR" $APACHE_SITE_ENABLED_DIR/*`
    result=$?
  else
    echo "no web server found, exiting"
    exit 1
  fi
  if [ "$result" -eq 0 ]
   then
     [ $VERBOSE ] && echo -n "Virtualhost for $EZPCOMP_EZ_DIR: "
     echo $virtualhost
     exit
   else
     echo "no virtualhost found" 
     exit 1
  fi
fi

if  [ "$WEB_VIRTUAL_HOST_NAME" ] ; then
  if [ $DEBUG ] ; then
    echo  "# Searching in virtualhost lines with 'server_name,ServerName,ServerAlias'"
    echo  "# Executing: "
  fi
  virtual_host=`$EZSCAN -w`
  if [ $? -eq 0 ] ; then
    if [ $DEBUG ] ; then
      echo "found virtualhost, now scanning for server names"
    fi
    [ $VERBOSE ] && echo "  List of Server name lines found in virtualhost ($virtual_host):" 
    if   [ -d $NGINX_SITE_ENABLED_DIR ]  ; then
      grep "^[[:space:]]*server_name"  $virtual_host  
    elif [ -d $APACHE_SITE_ENABLED_DIR ] ; then
      grep "^[[:space:]]*ServerName"  $virtual_host
      grep "^[[:space:]]*ServerAlias"  $virtual_host
    else
      echo "no web server found, exiting"
      exit 1
    fi
    exit
  else
    echo "no virtualhost found"    
    exit 1
  fi
fi



if  [ "$EZ_VERSION" ] ; then
  if [ $DEBUG ] ; then
    echo  "# Searching ez-version in  $EZPCOMP_EZ_DIR/lib/version.php"
    echo  "# Executing: "
  fi
  version_tmp='/tmp/tmp_ezscan_version.php'
  cp lib/version.php $version_tmp
  sed -i 's/\?>/echo eZPublishSDK::VERSION_MAJOR;echo ".";echo eZPublishSDK::VERSION_MINOR;echo ".";echo eZPublishSDK::VERSION_RELEASE; echo " (alias "; echo eZPublishSDK::VERSION_ALIAS;echo ")"; echo "\n";\?>/' $version_tmp
  output=`$PHP $version_tmp`
  if [ $? ]
   then
     [ $DEBUG ] && echo "found ez-version, exiting"
     [ $VERBOSE ] && echo -n "eZPublish in $EZPCOMP_EZ_DIR is version: "
     echo $output
     exit
   else
     echo "no ez-version found" 
     exit 1
  fi
fi
#
if [ "$ALL" ] ; then
  if [ $VERBOSE ] ; then
    echo  "# Showing all: "
  fi
    echo 
    echo "eZ Publish directory:  $EZPCOMP_EZ_DIR"
    echo "eZ Publish version:    `$EZSCAN -z`"
    echo "Virtualhost:           `$EZSCAN -w`"
    echo "Siteaccess:            `$EZSCAN -S`"

    if [ -z $SITEACCESS ] ; then
	    echo
	    echo "#eZINI"
	    echo "[FileSettings]"
	    echo "VarDir=`$PHP_EZSCAN _ini FileSettings VarDir`" 
	    echo
	    echo "[DatabaseSettings]"
	    echo "DatabaseImplementation=`$PHP_EZSCAN _ini DatabaseSettings DatabaseImplementation`" 
	    echo "Server=`$PHP_EZSCAN _ini DatabaseSettings Server`" 
	    echo "Database=`$PHP_EZSCAN _ini DatabaseSettings Database`" 
	    echo "User=`$PHP_EZSCAN _ini DatabaseSettings User`" 
	    echo
	    echo "[SiteSettings]"
	    echo "SiteName=`$PHP_EZSCAN _ini SiteSettings SiteName`" 
	    echo "DefaultAccess=`$PHP_EZSCAN _ini SiteSettings DefaultAccess`" 
	    echo 
	    echo "[SiteAccessSettings]"
	    echo "AvailableSiteAccessList="
	    echo $siteaccess_list
	    echo
    fi
    # elabora gli ini di ogni siteaccess
    if [ "$SITEACCESS_LIST" ] || [ "$SITEACCESS" ] ; then
      for siteaccess in $siteaccess_list 
       do
        echo 
        echo "	siteaccess: $siteaccess"
        echo "		[FileSettings]"
        echo "		VarDir=`$PHP_EZSCAN _ini_fetchFromFile FileSettings VarDir $siteaccess`" 
        echo
        echo "		[DatabaseSettings]"
        echo "		Server=`$PHP_EZSCAN _ini_fetchFromFile DatabaseSettings Server $siteaccess`" 
        echo "		Database=`$PHP_EZSCAN _ini_fetchFromFile DatabaseSettings Database $siteaccess`" 
        echo
      done
    fi
    echo "try 'ezscan --help' for datailed options"
    echo
    exit
  fi


if  [ "$SITEACCESS_LIST" ] ; then
  if [ $DEBUG ] ; then
    echo  "# Executing: "
    echo "$PHP_EZSCAN _ini SiteAccessSettings AvailableSiteAccessList" 
  fi
  [ $VERBOSE ] && echo -n "Siteaccess list for $EZPCOMP_EZ_DIR: "
  echo $siteaccess_list
  exit
fi


# if we arrive here it means nothing has been selected
    echo 
    echo "eZ Publish directory:  $EZPCOMP_EZ_DIR"
    echo "eZ Publish version:    `$EZSCAN -z`"
    echo "Virtualhost:           `$EZSCAN -w`"
    echo "Siteaccess:            `$EZSCAN -S`"
    echo
    echo "more with 'ezscan -aS'  ('ezscan -h' for datailed options)"
    echo
