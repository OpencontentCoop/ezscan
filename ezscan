#!/bin/bash
#
# ezscan script
# v. 0.0.3
#
# return information about an ezpublish installation
# 
# NOTE: this script needs php_ezscan in user PATH
#       (e.g. /usr/local/bin/php_ezscan)
#
#* Return values:
# 0: OK
# 1: error
#
###################################################################
# 
#
# v.0.4
#
# rivedo opzioni
#
# v.0.3
# aggiunto getops -l (long format)
# aggiunto + options
#
# v.0.2
# introdotto script bash
#
##################################################################
#
#
VERBOSE=0
PHP_EZSCAN=`which php_ezscan`
#
#
# getops see /usr/share/doc/util-linux/examples/getopt-parse.bash
this_script=`basename $0`
TEMP=`getopt -o vhdB:V:as:Sz:: --long verbose,help,ezpublish-directory,ini-block-name:,ini-var-name:,all,siteaccess:,list-siteaccess,z-long:: \
     -n "$this_script" -- "$@"`

if [ $? != 0 ] ; then 
  echo "try 'ezscan --help' for datailed options"
  echo "Terminating..." >&2 
  exit 1 
fi
# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"
while true ; do
    case "$1" in
        -v|--verbose) echo "Found the -v (verbose) option"
				VERBOSE=1 
				shift ;;
        -h|--help) 
				if [ $VERBOSE -eq 1 ]
				       then
				         echo "Found the -h (help) option"
				fi
				echo "usage: ezscan [-v|--verbose]"
				echo "              [-B|--ini-block-name block-name] [-V|--ini-var-name var-name]"
               	echo "              [-a|--all]"
               	echo "              [-h|--help]"
                echo "              [-d|--ezpublish-directory]"
                echo "              [-s|--siteaccess siteaccess]"
               	echo "              [-S|--list-siteaccess]"
				echo "              [DIRECTORY] (default to current dir)"
				echo "e.g."
				echo "ezscan  /home/httpd/mysite.site.com/html"
                		echo "ezscan -a"
				echo "ezscan -B DatabaseSettings -V User"
                		echo "ezscan -s"
                		echo "ezscan -a -S SiteAccess"
				echo "ezscan -h"
				echo 
				exit;;
        -d|--ezpublish-directory) 
            EZPUBLISH_DIRECTORY=1
            if [ $VERBOSE -eq 1 ]; then 
              echo "Found the -d (--ezpublish-directory) option"
            fi 
            shift ;;
        -B|--ini-block-name)
            EZINI_BLOCK_NAME="$2"
            if [ $VERBOSE -eq 1 ]; then
              echo "Found the -B (--ini-block-name) option, with value: $2"
            fi
            shift 2 ;;
        -V|--ini-var-name)
            EZINI_VAR_NAME="$2"
            if [ $VERBOSE -eq 1 ]; then
              echo "Found the -V (--ini-var-name) option, with value: $2"
            fi
            shift 2 ;;
        -a|--all)
            ALL="1"
            if [ $VERBOSE -eq 1 ]; then
              echo "Found the -a (--all) option"
            fi
            shift ;;
        -s|--siteaccess)
            SITEACCESS="$2"
            if [ $VERBOSE -eq 1 ]; then
              echo "Found the -s (--siteaccess) option, with value: $2"
            fi
            shift 2 ;;
        -S|--siteaccess-list)
            SITEACCESS_LIST="1"
            if [ $VERBOSE -eq 1 ]; then
              echo "Found the -S (--list-siteaccess) option"
            fi
            shift ;;

        -z|--z-long)
            # c has an optional argument. As we are in quoted mode,
            # an empty parameter will be generated if its optional
            # argument is not found.
            case "$2" in
                "") echo "Option z, no argument"; shift 2 ;;
                *)  echo "Option z, argument \`$2'" ; shift 2 ;;
            esac ;;
        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
    esac
done



if [ $VERBOSE -eq 1 ] ; then
	echo "Remaining arguments:"
	for arg do echo '--> '"\`$arg'" ; done
fi

# counting arguments
count=0
for arg do
  argomento="$arg"
  count=$[ $count + 1 ]    
done

# if no argument set argument to current dir
if [ $count -eq 0 ] ; then
  EZ_DIR=`pwd`
  if [ $VERBOSE -eq 1 ] ; then
    echo "No argument found: set EZ_DIR to current dir: $EZ_DIR"
  fi
fi

if [ $count -eq 1 ] ; then
  if [ $VERBOSE -eq 1 ] ; then
    echo "One argument found: set EZ_DIR to current dir: $argomento"
  fi
  EZ_DIR=$argomento
fi

if [ $count -ge 2 ] ; then
  echo "Too many arguments: only zero or 1 argument can be entered"
  EXIT_FOR_ERROR=yes
  
fi


# Test presence of mandatory options

if ( [ "$EZINI_BLOCK_NAME" ] && [ -z "$EZINI_VAR_NAME" ] ) || ( [ -z "$EZINI_BLOCK_NAME" ] && [  "$EZINI_VAR_NAME" ] )
then
  echo "eZIni output needs both blockName & varName"
  EXIT_FOR_ERROR=yes
fi


if [ $EXIT_FOR_ERROR ]
then
  #echo "ERROR"
  echo "Try 'ezscan -h'"
  exit 1
fi

#
#
# set defaults

# set EZ_DIR to current dir if it's not set
if [ -z "$EZ_DIR" ]
then
    EZ_DIR=`pwd`
fi

#TODO
# attivimo temporaneamente ALL di default
if [ -z "$ALL" ]
then
    ALL="1"
fi


if [ $VERBOSE -eq 1 ]
then
  echo "# Executing..."
fi


EZPCOMP_EZ_DIR=''
cd $EZ_DIR

# chech if we are inside an eZ Publish directory
#    populate $EZPCOMP_IS_EZ_DIR, $EZPCOMP_EZ_DIR
#
    if [ -n "$EZPCOMP_IS_EZ_DIR" ]; then EZPCOMP_IS_EZ_DIR=0; fi
    # Exit directly if not in an ezpublish instance
    CWD=$(pwd)
    EZPCOMP_PWD=$CWD

    # Reset the previous working directory if it doesn't match the current one
    if [ -n "$EZPCOMP_PWD" ] || [ "$EZPCOMP_PWD" -ne "$CWD" ]; then
        #local cwd_array ifs_bak
        IFS_BAK=$IFS
        IFS="/"
    CWD_ARRAY=( $CWD )
        EZPCOMP_IS_EZ_DIR=0
    for(( index=${#CWD_ARRAY[*]} ; index > 0 ; index-- ))
        do
            testdir="${CWD_ARRAY[*]:0:$index}"
            #_ezp_p_debug "$index: $testdir/lib/version.php"
            if [ -f "$testdir/lib/version.php" ]; then
                #_ezp_p_debug "$testdir did match"
                EZPCOMP_EZ_DIR="$testdir"
                EZPCOMP_IS_EZ_DIR=1
                EZPCOMP_PWD=$CWD
                export EZPCOMP_EZ_DIR
                export EZPCOMP_IS_EZ_DIR
                break
            fi
        done
        IFS=$IFS_BAK
    fi

if [ $VERBOSE -eq 1 ]
then
  echo '$EZPCOMP_EZ_DIR='$EZPCOMP_EZ_DIR
  echo '$EZPCOMP_IS_EZ_DIR='$EZPCOMP_IS_EZ_DIR
fi


# Not an eZ Dir
if [ -z "$EZPCOMP_IS_EZ_DIR" ] || [ "$EZPCOMP_IS_EZ_DIR" -eq 0 ]; then
  echo "You are not in a eZ Publish directory, or the documentroot you supplied is not an eZ Publish directory"
  exit 1
fi

if [ $EZPUBLISH_DIRECTORY ] ; then
  [ $VERBOSE -eq 1 ] && echo "eZ Publish directory is: "
  echo $EZPCOMP_EZ_DIR
  exit
fi

if [ $VERBOSE -eq 1 ] ; then
  echo  "# Executing: "
  echo  "cd $EZPCOMP_EZ_DIR"
fi
cd $EZPCOMP_EZ_DIR

###################################################################################
##   We are now in a valid eZ directory
###################################################################################

#get siteaccess list
siteaccess_list=`$PHP_EZSCAN _ini SiteAccessSettings AvailableSiteAccessList`

# check if SITEACCESS exists
if [ $SITEACCESS ] ; then
    SITEACCESS_EXISTS="0"
    for siteaccess in $siteaccess_list ; do
      if [ $siteaccess = $SITEACCESS ] ; then
        SITEACCESS_EXISTS="1"
      fi
    done
    if [ $SITEACCESS_EXISTS -eq 0 ] ; then
      #echo "ERROR"
      echo "Siteaccess: '$SITEACCESS' does not exists"
      echo "Possible siteaccess are:"
      echo $siteaccess_list
      exit 1
    fi
fi

# la seguente e' necessaria per ridurre siteaccess_list in caso di richiesta di singolo siteaccess
if [ $SITEACCESS ] ; then
  siteaccess_list=$SITEACCESS
fi
#


#################
##  We have now a valid $siteaccess_list (with ONE or many siteaccess)
#################



#/home/developer/scripts/ezscan_dev/ezscan-php.php $EZINI_BLOCK_NAME $EZINI_VAR_NAME
if  [ "$EZINI_BLOCK_NAME" ] && [ "$EZINI_VAR_NAME" ] ; then
  if [ $VERBOSE -eq 1 ] ; then
    echo  "# Executing: "
    echo "$PHP_EZSCAN _ini $EZINI_BLOCK_NAME $EZINI_VAR_NAME" 
  fi
  if [ -z $SITEACCESS ] ; then
    $PHP_EZSCAN  _ini $EZINI_BLOCK_NAME $EZINI_VAR_NAME
  else
    for siteaccess in $siteaccess_list
     do
      [ $SITEACCESS_LIST ] && echo "Siteaccess: $siteaccess"
      $PHP_EZSCAN _ini_fetchFromFile $EZINI_BLOCK_NAME $EZINI_VAR_NAME  $siteaccess
    done
  fi
  exit
fi


if  [ "$SITEACCESS_LIST" ] ; then
  #if [ $VERBOSE -eq 1 ] ; then
  #  echo  "# Executing: "
  #  echo "$PHP_EZSCAN _ini SiteAccessSettings AvailableSiteAccessList" 
  #fi
  echo $siteaccess_list
  exit
fi


#
if [ $ALL -eq 1 ] ; then
  if [ $VERBOSE -eq 1 ] ; then
    echo  "# Showing all: "
  fi
    echo 
    echo "eZ Publish directory:  $EZPCOMP_EZ_DIR"
    if [ -z $SITEACCESS ] ; then
	    echo
	    echo "#eZINI"
	    echo "[FileSettings]"
	    echo "VarDir=`$PHP_EZSCAN _ini FileSettings VarDir`" 
	    echo
	    echo "[DatabaseSettings]"
	    echo "DatabaseImplementation=`$PHP_EZSCAN _ini DatabaseSettings DatabaseImplementation`" 
	    echo "Server=`$PHP_EZSCAN _ini DatabaseSettings Server`" 
	    echo "Database=`$PHP_EZSCAN _ini DatabaseSettings Database`" 
	    echo "User=`$PHP_EZSCAN _ini DatabaseSettings User`" 
	    echo
	    echo "[SiteSettings]"
	    echo "SiteName=`$PHP_EZSCAN _ini SiteSettings SiteName`" 
	    echo "DefaultAccess=`$PHP_EZSCAN _ini SiteSettings DefaultAccess`" 
	    echo 
	    echo "[SiteAccessSettings]"
	    echo "AvailableSiteAccessList="
	    echo $siteaccess_list
	    echo
    fi
    # elavora gli ini di ogni siteaccess
    for siteaccess in $siteaccess_list 
     do
      echo 
      echo "	siteaccess: $siteaccess"
      echo "		[FileSettings]"
      echo "		VarDir=`$PHP_EZSCAN _ini_fetchFromFile FileSettings VarDir $siteaccess`" 
      echo
      echo "		[DatabaseSettings]"
      echo "		Server=`$PHP_EZSCAN _ini_fetchFromFile DatabaseSettings Server $siteaccess`" 
      echo "		Database=`$PHP_EZSCAN _ini_fetchFromFile DatabaseSettings Database $siteaccess`" 
      echo
    done

    echo
    echo
    echo "try 'ezscan --help' for datailed options"
    echo
fi